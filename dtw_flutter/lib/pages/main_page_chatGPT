import 'package:flutter/material.dart';

class MainPage extends StatefulWidget {
  const MainPage({super.key});
  @override
  State<StatefulWidget> createState() => _MainPageState();
}

class _MainPageState extends State<MainPage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.black,
        leading: Icon(Icons.menu),
        actions: [
          Icon(Icons.search),
        ],
      ),
      body: Column(
        children: [
          Container(
            height: 200,
            child: ListView.builder(
              scrollDirection: Axis.horizontal,
              itemCount: 5,
              itemBuilder: (context, index) {
                return Container(
                  width: 150,
                  margin: EdgeInsets.all(10),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    color: Colors.blue,
                  ),
                  child: Center(
                    child: Text(
                      'Chart ${index + 1}',
                      style: TextStyle(color: Colors.white),
                    ),
                  ),
                );
              },
            ),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: 30,
              itemBuilder: (context, index) {
                if (index == 0) {
                  return Container(
                    height: 100,
                    child: ListView.builder(
                      scrollDirection: Axis.horizontal,
                      itemCount: 10,
                      itemBuilder: (context, index) {
                        return Container(
                          width: 150,
                          margin: EdgeInsets.all(10),
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10),
                            color: Colors.green,
                          ),
                          child: Center(
                            child: Text(
                              'Item ${index + 1}',
                              style: TextStyle(color: Colors.white),
                            ),
                          ),
                        );
                      },
                    ),
                  );
                } else {
                  return ListTile(
                    title: Text('Item ${index + 1}'),
                  );
                }
              },
            ),
          ),
        ],
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          children: [
            IconButton(
              icon: Icon(Icons.home),
              onPressed: () {},
            ),
            IconButton(
              icon: Icon(Icons.add),
              onPressed: () {},
            ),
            IconButton(
              icon: Icon(Icons.settings),
              onPressed: () {},
            ),
          ],
        ),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.play_arrow),
        onPressed: () {},
      ),
    );
  }
}


 Container(
              height: 50,
              padding: const EdgeInsets.symmetric(horizontal: 20),
              decoration: BoxDecoration(color: Colors.green.withOpacity(0.2)),
              child: Row(
                children: [
                  Expanded(
                      flex: 1,
                      child: Text(
                        '左边的文字',
                        textAlign: TextAlign.left,
                      )),
                  Expanded(
                    flex: 1,
                    child: Text(
                      '右边的文字',
                      textAlign: TextAlign.right,
                    ),
                  ),
                ],
              )),


               static List<MyCompany> fromMapList(dynamic mapList) {
    List<MyCompany> list = List();
    for (int i = 0; i < mapList.length; i++) {
      list.add(fromMap(mapList[i]));
    }
    return list;
  }

   Future getMyCompany(int userId) async {
    await repository.getMyCompany(userId, errorCallback).then((company) {
      LogUtil.v(company, tag: 'company');
      if (company.data['code'] == Api.STATUS_SUCCESS) {
        List list = company.data['data'] as List;
        if (list == null || list.length == 0) {
          showSnackBar('您还没有加入或注册公司');
          setState(() {
            hasCompany = 1;
          });
        } else {
          myCompany = MyCompany.fromMapList(list);
          if (myCompany != null) {
            setState(() {
              hasCompany = 2;
            });
          }
        }
      } else {
        LogUtil.v(company.data['msg']);
        showSnackBar(company.data['msg']);
      }
    });
  }


  import 'dart:convert';

import 'package:flutter/material.dart';

import '../models/info.dart';
import '../models/user.dart';
import '../util/web/httpUtil.dart';
import '../util/web/non_web_url_strategy.dart';

class InfoProvider with ChangeNotifier {
  String _title = '';
  Info? info;

  void getUserInfo() async {
    Info res = await makeRequest();
    this.info = res;
  }

  Future<Info> makeRequest() async {
    String path = APPURL.getMainInfo;
    final res = await HttpUtil.get(path);
    return Info.fromMap(res.data);
  }

  void getUserInfo2() async {
    List<Info> res = await makeRequest2();
  }

  Future<List<Info>> makeRequest2() async {
    String path = APPURL.getMainInfo;
    final res = await HttpUtil.post(path, {});
    final List<dynamic> data = res.data;
    final List<Info> infos =
        data.map((dynamic item) => Info.fromMap(item)).toList();
    return infos;
  }

}


bottomNavigationBar: Container(
          decoration: BoxDecoration(
            color: Colors.black.withOpacity(0.5),
            borderRadius: BorderRadius.circular(10.0),
          ),
          margin: EdgeInsets.fromLTRB(30.0, 0.0, 30.0, 30.0),
          child: BottomNavigationBar(
            items: const <BottomNavigationBarItem>[
              BottomNavigationBarItem(
                icon: Icon(Icons.home),
                label: 'Home',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.business),
                label: 'Business',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.school),
                label: 'School',
              ),
            ],
            currentIndex: _selectedIndex,
            selectedItemColor: Colors.blue,
            onTap: _onItemTapped,
          ),